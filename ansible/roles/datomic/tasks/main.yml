---
- name: Create directory for Datomic
  ansible.builtin.file:
    state: directory
    path: /etc/datomic
    mode: 0770

- name: Import client-cert for datomic-user
  ansible.builtin.shell: "gcloud secrets versions access latest --secret db-datomic-datomic-user-client-cert > /etc/datomic/user-client-cert"
  args:
    creates: /etc/datomic/user-client-cert

- name: Import client-private-key for datomic-user
  ansible.builtin.shell: "gcloud secrets versions access latest --secret db-datomic-datomic-user-client-private-key > /etc/datomic/user-client-private-key"
  args:
    creates: /etc/datomic/user-client-private-key

- name: Limit file permissions for client-private-key
  file:
    path: /etc/datomic/user-client-private-key
    mode: '0600'

- name: Prepare DER-version of client-private-key
  ansible.builtin.command: openssl pkcs8 -topk8 -inform PEM -outform DER -in /etc/datomic/user-client-private-key -out /etc/datomic/user-client-private-key.der -nocrypt
  args:
    creates: /etc/datomic/user-client-private-key.der

- name: Import server-cert for datomic-user
  ansible.builtin.shell: "gcloud secrets versions access latest --secret db-datomic-server-cert > /etc/datomic/server-cert"
  args:
    creates: /etc/datomic/server-cert

- name: Prepare cloud-sql IP for use in transactor.properties
  local_action: ansible.builtin.command gcloud sql instances describe datomic --format=json | jq -r '.ipAddresses[] | select(.type=="PRIVATE") | .ipAddress'
  register: cloud_sql_ip
  become: false

- name: Prepare datomic-vm IP for use in transactor.properties
  local_action: ansible.builtin.command gcloud compute instances describe datomic-vm --zone=europe-north1-a --format='get(networkInterfaces[0].networkIP)'
  register: datomic_vm_ip
  become: false

- name: Prepare password secret for use in transactor.properties
  ansible.builtin.command: gcloud secrets versions access latest --secret "db-datomic-user-password"
  register: db_password

- name: Prepare user secret for use in transactor.properties
  ansible.builtin.command: gcloud secrets versions access latest --secret "db-datomic-user-name"
  register: db_user

- name: Create transactor.properties from template
  ansible.builtin.template:
    src: transactor.properties.j2
    dest: /etc/datomic/transactor.properties

- name: Ensure psql is installed
  ansible.builtin.apt:
    name:
      - postgresql-client
    state: present

- name: Create create-table.sh from template
  ansible.builtin.template:
    src: create-table.sh.j2
    dest: /etc/datomic/create-table.sh
    mode: '0755'

- name: Upload SQL to create initial Datomic DB
  ansible.builtin.template:
    src: create-table.sql.j2
    dest: /etc/datomic/create-table.sql
  register: uploaded_sql

- name: Create table
  ansible.builtin.command: /etc/datomic/create-table.sh
  when: uploaded_sql.changed

- name: Start Datomic container
  ansible.builtin.docker_container:
    name: datomic
    image: {{ datomic_docker_image }}
    state: started
    volumes:
     - "/etc/datomic:/etc/datomic:ro"
    ports:
     - "4337:4337"
     - "4338:4338"
     - "4339:4339"
    restart_policy: unless-stopped
